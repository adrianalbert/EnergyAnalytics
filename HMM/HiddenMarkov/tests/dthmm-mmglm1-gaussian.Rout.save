
R version 2.13.0 (2011-04-13)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i486-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #    Gaussian with identity link function, mu=beta0
> #    one single series
> #    Compare dthmm and mmglm1
> #    R CMD BATCH --no-save dthmm-mmglm1-gaussian.R dthmm-mmglm1-gaussian.Rout.save
> 
> library(HiddenMarkov)
> 
> #------------------------------------------------------------------
> #   Using dthmm
> 
> #   n = series length for each subject
> #   N = number of subjects
> n <- 5000
> N <- 1
> 
> Pi <- matrix(c(0.8, 0.2,
+                0.3, 0.7),
+              byrow=TRUE, nrow=2)
> 
> delta <- c(1, 0)
> 
> y <- dthmm(NULL, Pi=Pi, distn="norm", delta=delta, pm=list(mean=c(5, 2), sd=c(1, 1)))
> 
> y <- simulate(y, nsim=N*n, seed=10)
> print(logLik(y))
[1] -9233.768
> 
> tmp <- BaumWelch(y, bwcontrol(posdiff=FALSE, tol=1e-05, prt=FALSE))
> 
> print(summary(tmp))
$delta
[1] 1 0

$Pi
          [,1]      [,2]
[1,] 0.8020213 0.1979787
[2,] 0.2865150 0.7134850

$nonstat
[1] TRUE

$distn
[1] "norm"

$pm
$pm$mean
[1] 4.999418 1.992812

$pm$sd
[1] 0.9969616 1.0161091


$discrete
[1] FALSE

$n
[1] 5000

> print(logLik(tmp))
[1] -9232.661
> 
> 
> #------------------------------------------------------------------
> #   Using mmglm1
> 
> glmformula <- formula(y$x ~ 1)
> glmfamily <- gaussian(link="identity")
> Xdesign <- model.matrix(glmformula)
> 
> beta <- matrix(c(5, 2), 
+                ncol=ncol(Pi), nrow=ncol(Xdesign), byrow=TRUE)
> 
> y1 <- mmglm1(y$x, Pi, delta, glmfamily, beta, Xdesign, sigma=c(1, 1), msg=FALSE)
> print(logLik(y1))
[1] -9233.768
> 
> tmp1 <- BaumWelch(y1, bwcontrol(posdiff=FALSE, tol=1e-05, prt=FALSE))
> 
> print(summary(tmp1))
$delta
[1] 1 0

$Pi
          [,1]      [,2]
[1,] 0.8020213 0.1979787
[2,] 0.2865150 0.7134850

$nonstat
[1] TRUE

$beta
             State 1  State 2
(Intercept) 4.999418 1.992812

$sigma
[1] 0.9969616 1.0161091

$glmfamily

Family: gaussian 
Link function: identity 


$n
[1] 5000

> print(logLik(tmp1, fortran=TRUE))
[1] -9232.661
> print(logLik(tmp1, fortran=FALSE))
[1] -9232.661
> 
> #------------------------------------------------------------------
> #   Compare Models
> 
> if (abs(logLik(tmp)-logLik(tmp1)) > 1e-06)
+     warning("WARNING: See tests/dthmm-mmglm1-gaussian.R, log-likelihoods are different")
> 
> if (any(Viterbi(tmp)!=Viterbi(tmp1)))
+     warning("WARNING: See tests/dthmm-mmglm1-gaussian.R, Viterbi paths are different")
> 
> if (any(abs(residuals(tmp)-residuals(tmp1)) > 1e-06))
+     warning("WARNING: See tests/dthmm-mmglm1-gaussian.R, residuals are different")
> 
> 
> print(tmp$pm)
$mean
[1] 4.999418 1.992812

$sd
[1] 0.9969616 1.0161091

> print(tmp1$beta)
             State 1  State 2
(Intercept) 4.999418 1.992812
> print(tmp1$sigma)
[1] 0.9969616 1.0161091
> 
> print(tmp$Pi)
          [,1]      [,2]
[1,] 0.8020213 0.1979787
[2,] 0.2865150 0.7134850
> print(tmp1$Pi)
          [,1]      [,2]
[1,] 0.8020213 0.1979787
[2,] 0.2865150 0.7134850
> 
> 
> 
> proc.time()
   user  system elapsed 
  8.332   0.412   8.790 
